name: Run Checker Script
on:
  schedule:
    - cron: '*/2 * * * *'
  workflow_dispatch:
jobs:
  run-script:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check Time and Set Duration
        id: time-check
        run: |
          # Install tzdata
          sudo apt-get install -y tzdata
          
          # Set timezone to Bangladesh
          export TZ='Asia/Dhaka'
          
          # Get current time in Bangladesh
          current_time=$(date '+%H:%M')
          current_hour=$(date '+%H')
          current_minute=$(date '+%M')
          
          # Convert to minutes since midnight
          current_mins=$((current_hour * 60 + current_minute))
          start_mins=$((8 * 60 + 15))   # 8:15 AM
          end_mins=$((12 * 60 + 15))    # 12:15 PM (4 hours later)
          
          echo "Current time in Bangladesh: $current_time"
          echo "Current minutes: $current_mins"
          echo "Start minutes: $start_mins"
          echo "End minutes: $end_mins"
          echo "Trigger event: ${{ github.event_name }}"
          
          # Check if workflow was triggered manually
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Workflow triggered manually - will run for 5 hours regardless of time"
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "run_duration=18000" >> $GITHUB_OUTPUT  # 5 hours = 18000 seconds
          elif [ $current_mins -ge $start_mins ] && [ $current_mins -le $end_mins ]; then
            echo "Time check passed - within operating hours (8:15 AM - 12:15 PM)"
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "run_duration=14400" >> $GITHUB_OUTPUT  # 4 hours = 14400 seconds
          else
            echo "Outside operating hours (${current_time}) and not manually triggered"
            echo "should_run=false" >> $GITHUB_OUTPUT
            echo "run_duration=0" >> $GITHUB_OUTPUT
          fi

      - name: Checkout repository
        if: steps.time-check.outputs.should_run == 'true'
        uses: actions/checkout@v3

      - name: Set up Python
        if: steps.time-check.outputs.should_run == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        if: steps.time-check.outputs.should_run == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install httpx requests

      - name: Run script multiple times
        if: steps.time-check.outputs.should_run == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          LOGIN_EMAIL: ${{ secrets.EMAIL }}
          LOGIN_PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          duration=${{ steps.time-check.outputs.run_duration }}
          duration_hours=$((duration / 3600))
          
          echo "Starting multiple runs at $(TZ='Asia/Dhaka' date '+%Y-%m-%d %H:%M:%S')"
          echo "Will run for $duration_hours hours (trigger: ${{ github.event_name }})"
          
          # Function to run the script
          run_script() {
            echo "Running script at $(TZ='Asia/Dhaka' date '+%Y-%m-%d %H:%M:%S')"
            python checker.py
            echo "Completed run at $(TZ='Asia/Dhaka' date '+%Y-%m-%d %H:%M:%S')"
          }
          
          # Initial run
          run_script
          
          # Continue running every 100 seconds until the time limit
          end_time=$(($(date +%s) + duration))
          run_count=1
          
          while [ $(date +%s) -lt $end_time ]; do
            echo "Waiting 100 seconds before next run..."
            sleep 100
            
            # Check if we're still within the time window
            if [ $(date +%s) -lt $end_time ]; then
              run_count=$((run_count + 1))
              echo "Starting run #$run_count"
              run_script
            fi
          done
          
          echo "Completed all $run_count runs at $(TZ='Asia/Dhaka' date '+%Y-%m-%d %H:%M:%S')"
          echo "Total duration: $duration_hours hours"
